
Description
You are given an unsorted array containing 'n' elements. The elements are in the range from 1 to n. However, one element between 1 and n is missing and one element occurs twice. Find the repeating element and the missing element.

Consider the array {2, 5, 4, 1, 4}.
The repeating element is 4 and the missing element is 3.


import java.util.*; 
  
class Source
{ 
    static void find(int arr[], int n) 
    { 
        int i; 
        
        for (i = 0; i < n; i++)
        { 
            int abs_val = Math.abs(arr[i]); 
            if (arr[abs_val - 1] > 0) 
                arr[abs_val - 1] = -arr[abs_val - 1]; 
            else
                System.out.print(abs_val + " "); 
        }
        
        for (i = 0; i < n; i++)
        { 
            if (arr[i] > 0) 
                System.out.print(i + 1); 
        }
    } 
  
    public static void main(String[] args) 
    { 
        int n;
        Scanner s = new Scanner(System.in);
        n = s.nextInt();
        int arr[] = new int[n];
        for(int i = 0; i < n; i++)
            arr[i] = s.nextInt();
            
        find(arr, n);
    } 
}


Another approach:


import java.util.*;
class GFG {
 
    // function to find repeating elements
    static void printRepeating(int arr[], int n)
    {
        // First check all the values that are
        // present in an array then go to that
        // values as indexes and increment by
        // the size of array
        for (int i = 0; i < n; i++)
        {
            int index = arr[i] % n;
            arr[index] += n;
        }
 
        // Now check which value exists more
        // than once by dividing with the size
        // of array
        for (int i = 0; i < n; i++)
        {
            if ((arr[i] / n) >= 2)
                System.out.print(i + " ");
        }
    }
 
    // Driver code
    public static void main(String args[])
    {
        int arr[] = { 1, 6, 3, 1, 3, 6, 6 };
        int arr_size = arr.length;
 
        System.out.println("The repeating elements are: ");
 
        // Function call
        printRepeating(arr, arr_size);
    }
}